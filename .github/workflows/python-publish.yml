# This workflow will publish the package to npm and PyPI when a new release is created

name: Upload Python Package

on:
    release:
        types: [created]

jobs:
    deploy:
        runs-on: ubuntu-latest

        # Add permissions for trusted publishing (optional but recommended)
        permissions:
            id-token: write
            contents: read

        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  registry-url: https://registry.npmjs.org/
            - name: Install uv
              uses: astral-sh/setup-uv@v5
              with:
                  python-version: '3.12'
            - name: Enable uv cache
              uses: astral-sh/setup-uv@v5
              with:
                  enable-cache: true
            - name: Install the project
              run: uv sync --all-extras --dev
            # - name: Build and publish to npm
            #   run: |
            #       uv run npm install | echo "Ignore npm install error"
            #       uv run npm run build
            #       uv run npm publish
            #   env:
            #       NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
            # - name: Build and publish to pypi
            #   run: |
            #       uv build
            #       uv publish --username=${{ secrets.PYPI_USERNAME }} --password=${{ secrets.PYPI_PASSWORD }}
            # - name: Build and publish to PyPI
            #   env:
            #     TWINE_USERNAME: "__token__"
            #     TWINE_PASSWORD: "${{ secrets.PYPI_API_TOKEN }}"
            #   run: |
            #     uv build
            #     uv publish
            - name: Build the package
              run: uv build
              
            - name: Publish to PyPI
              env:
                # Use UV_PUBLISH_TOKEN instead of TWINE variables
                UV_PUBLISH_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
              run: uv publish
